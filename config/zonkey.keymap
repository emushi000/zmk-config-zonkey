#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_BSLH  INT1         // (backslash)

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    behaviors {
        combos {
            compatible = "zmk,combos";

            CoMBL {
                bindings = <&mkp LCLK>;
                key-positions = <18 19>;
                layers = <0>;
            };

            CoMBR {
                bindings = <&mkp RCLK>;
                key-positions = <19 20>;
                layers = <0>;
            };

            CoMB4 {
                bindings = <&mkp MB4>;
                key-positions = <6 7>;
                layers = <0>;
            };

            CoMB5 {
                bindings = <&mkp MB5>;
                key-positions = <7 8>;
                layers = <0>;
            };

            CoEsc {
                bindings = <&kp ESC>;
                key-positions = <1 2>;
                layers = <0>;
            };

            CoGrave {
                bindings = <&kp GRAVE>;
                key-positions = <13 12>;
                layers = <0>;
            };

            CoTab {
                bindings = <&kp TAB>;
                key-positions = <11 12>;
                layers = <0>;
            };

            CoLang1 {
                bindings = <&kp LANG1>;
                key-positions = <2 3>;
                layers = <0>;
            };

            CoLang2 {
                bindings = <&kp LANG2>;
                key-positions = <26 25>;
                layers = <0>;
            };

            CoF10 {
                bindings = <&kp F10>;
                key-positions = <24 25>;
                layers = <0>;
            };

            CoF7 {
                bindings = <&kp F7>;
                key-positions = <23 24>;
                layers = <0>;
            };
        };

        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp AT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp CARET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp AMPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp ASTRK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LPAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LS(N9)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moA: moA {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moB: moB {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moC: moC {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp INT3>, <&kp JP_PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moD: moD {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moE: moE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp RBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moF: moF {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp KP_PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moG: moG {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp APOSTROPHE>, <&kp DQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moH: moH {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH>, <&kp TILDE2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moI: moI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_BSLH>, <&kp JP_UNDERSCORE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moBs: moBs {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "MOBS";
        };

        moSlash: moSlash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_SLASH>, <&kp INT_YEN>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "MOSLASH";
        };

        moExQu: moExQu {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N1)>, <&kp LS(SLASH)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "MOEXQU";
        };

        macros {
            to_layer_0: to_layer_0 {
                compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
                label = "TO_LAYER_0";
            };
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        // new behavior
        moColon: moColon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp SQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "MOCOLON";
        };

        moQote: moQote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N2)>, <&kp LS(N7)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "MOQOTE";
        };

        moHyUn: moHyUn {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp LS(INT1)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "MOHYUN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

            // -----------------------------------------------------------------------------------------
            //       |  Q  |  W  |  E  |  R  |  T  |                       |  Y  |  U  |  I  |  O |  P  |
            //       |  A  |  S  |  D  |  F  |  G  | MB3 |                 |  H  |  J  |  K  |  L | :;  |
            // |SHIFT|  Z  |  X  |  C  |  V  |  B  |           | PS  | ESC |  N  |  M  | ,<  | .> | /\  |
            // | CTRL| WIN | ALT |1 TAB| SPA |3 F2 |           | BS  |2 ENT|                      | !?  |

            // -----------------------------------------------------------------------------------------
            //       |  ,  |  7  |  8  |  9  |trans|                       |  $  |  (  |  )  |  [  |  ]  |
            //       |  .  |  4  |  5  |  6  |trans|trans|                 |  =  |  +  |  -  |  *  | /\  |
            // |SHIFT|  0  |  1  |  2  |  3  |trans|           |trans|  ~  |  &  |  #  |  @  |  ^  |  %  |
            // | CTRL| WIN | ALT |1 TAB|trans|trans|           | "'  | -_  |                       |trans|

            // -----------------------------------------------------------------------------------------
            //       | ^Q  | ^W  | ^E  | ^R  | ^T  |                       |trans| PD  |  ↑  | PU  |trans|
            //       | ^A  | ^S  | ^D  | ^F  | ^G  |trans|                 |trans|  ←  |  ↓  |  →  | App |
            // |SHIFT| ^Z  | ^X  | ^C  | ^V  | ^B  |           |trans|trans|trans|trans|HOME | END |trans|
            // | CTRL| WIN | ALT |1 TAB|trans|trans|           |trans|trans|                       |trans|

            // -----------------------------------------------------------------------------------------
            //       | F1  | F2  | F3  | F4  | F5  |                       | F6  | F7  | F8  | F9  | F10 |
            //       |  1  |  2  |  3  |  4  |  5  |trans|                 |  6  |  7  |  8  |  9  |  0  |
            // |SHIFT| F11 | F12 | F13 | F14 | F15 |           |BTCLA|BTCL | BT1 | BT2 | BT3 | BT4 |trans|
            // | CTRL| WIN | ALT |trans|trans|trans|           |trans|trans|                       |trans|


        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R             &kp T                                             &kp Y          &kp U      &kp I      &kp O    &kp P
&kp A           &kp S         &kp D         &kp F             &kp G        &msc MB3             &kp ESC             &kp H          &kp J      &kp K      &kp L    &moColon
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C             &kp V        &kp B               &kp PRINTSCREEN  &kp N          &kp M      &kp COMMA  &kp DOT  &moSlash
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 TAB         &kp SPACE    &lt 3 F2            &moBs            &lt 2 ENTER                                   &moExQu
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp COMMA       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans                                    &kp LS(N4)        &kp LS(N8)   &kp LS(N9)    &kp RBKT         &kp NUHS
&kp KP_DOT      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans           &trans    &kp LS(EQUAL)  &kp LS(MINUS)     &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &moSlash
&kp LEFT_SHIFT  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans    &trans         &kp LS(N6)        &kp LS(N3)   &kp LBKT      &kp EQUAL        &kp LS(N5)
&kp LCTRL       &kp LEFT_GUI     &kp LEFT_ALT     &trans           &trans           &trans                   &moQote           &moHyUn                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp LC(Q)       &kp LC(W)     &kp LC(E)     &kp LC(R)  &kp LC(T)                       &trans  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &trans
&kp LC(A)       &kp LC(S)     &kp LC(D)     &kp LC(F)  &kp LC(G)  &trans       &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp K_APP
&kp LEFT_SHIFT  &kp LC(Z)     &kp LC(X)     &kp LC(C)  &kp LC(V)  &kp LC(B)    &trans  &trans  &trans          &kp HOME        &kp END          &trans
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &trans     &trans     &trans               &trans  &trans                                           &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp F5                              &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&kp N1  &kp N2   &kp N3   &kp N4   &kp N5   &trans     &bt BT_CLR      &kp N6        &kp N7        &kp N8        &kp N9        &kp N0
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &bt BT_CLR_ALL  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans   &trans   &trans   &trans   &trans                     &trans        &trans                                    &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans          &trans        &trans        &trans          &trans                                 &trans         &trans     &trans  &trans  &trans
&trans          &trans        &trans        &trans          &trans     &trans              &trans  &trans         &trans     &trans  &trans  &trans
&kp LEFT_SHIFT  &trans        &trans        &trans          &trans     &trans              &trans  &trans         &trans     &trans  &trans  &trans
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &kp INT_HENKAN  &kp SPACE  &kp INT_MUHENKAN            &kp BACKSPACE  &kp ENTER                          &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
